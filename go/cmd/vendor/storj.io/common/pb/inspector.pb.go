// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inspector.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"
	time "time"

	proto "github.com/gogo/protobuf/proto"

	drpc "storj.io/drpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ListIrreparableSegmentsRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	LastSeenSegmentPath  []byte   `protobuf:"bytes,2,opt,name=last_seen_segment_path,json=lastSeenSegmentPath,proto3" json:"last_seen_segment_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIrreparableSegmentsRequest) Reset()         { *m = ListIrreparableSegmentsRequest{} }
func (m *ListIrreparableSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIrreparableSegmentsRequest) ProtoMessage()    {}
func (*ListIrreparableSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{0}
}
func (m *ListIrreparableSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Unmarshal(m, b)
}
func (m *ListIrreparableSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *ListIrreparableSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIrreparableSegmentsRequest.Merge(m, src)
}
func (m *ListIrreparableSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Size(m)
}
func (m *ListIrreparableSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIrreparableSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIrreparableSegmentsRequest proto.InternalMessageInfo

func (m *ListIrreparableSegmentsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListIrreparableSegmentsRequest) GetLastSeenSegmentPath() []byte {
	if m != nil {
		return m.LastSeenSegmentPath
	}
	return nil
}

type IrreparableSegment struct {
	Path                 []byte   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	SegmentDetail        *Pointer `protobuf:"bytes,2,opt,name=segment_detail,json=segmentDetail,proto3" json:"segment_detail,omitempty"`
	LostPieces           int32    `protobuf:"varint,3,opt,name=lost_pieces,json=lostPieces,proto3" json:"lost_pieces,omitempty"`
	LastRepairAttempt    int64    `protobuf:"varint,4,opt,name=last_repair_attempt,json=lastRepairAttempt,proto3" json:"last_repair_attempt,omitempty"`
	RepairAttemptCount   int64    `protobuf:"varint,5,opt,name=repair_attempt_count,json=repairAttemptCount,proto3" json:"repair_attempt_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IrreparableSegment) Reset()         { *m = IrreparableSegment{} }
func (m *IrreparableSegment) String() string { return proto.CompactTextString(m) }
func (*IrreparableSegment) ProtoMessage()    {}
func (*IrreparableSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{1}
}
func (m *IrreparableSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IrreparableSegment.Unmarshal(m, b)
}
func (m *IrreparableSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IrreparableSegment.Marshal(b, m, deterministic)
}
func (m *IrreparableSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IrreparableSegment.Merge(m, src)
}
func (m *IrreparableSegment) XXX_Size() int {
	return xxx_messageInfo_IrreparableSegment.Size(m)
}
func (m *IrreparableSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_IrreparableSegment.DiscardUnknown(m)
}

var xxx_messageInfo_IrreparableSegment proto.InternalMessageInfo

func (m *IrreparableSegment) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *IrreparableSegment) GetSegmentDetail() *Pointer {
	if m != nil {
		return m.SegmentDetail
	}
	return nil
}

func (m *IrreparableSegment) GetLostPieces() int32 {
	if m != nil {
		return m.LostPieces
	}
	return 0
}

func (m *IrreparableSegment) GetLastRepairAttempt() int64 {
	if m != nil {
		return m.LastRepairAttempt
	}
	return 0
}

func (m *IrreparableSegment) GetRepairAttemptCount() int64 {
	if m != nil {
		return m.RepairAttemptCount
	}
	return 0
}

type ListIrreparableSegmentsResponse struct {
	Segments             []*IrreparableSegment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListIrreparableSegmentsResponse) Reset()         { *m = ListIrreparableSegmentsResponse{} }
func (m *ListIrreparableSegmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIrreparableSegmentsResponse) ProtoMessage()    {}
func (*ListIrreparableSegmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{2}
}
func (m *ListIrreparableSegmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Unmarshal(m, b)
}
func (m *ListIrreparableSegmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Marshal(b, m, deterministic)
}
func (m *ListIrreparableSegmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIrreparableSegmentsResponse.Merge(m, src)
}
func (m *ListIrreparableSegmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Size(m)
}
func (m *ListIrreparableSegmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIrreparableSegmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIrreparableSegmentsResponse proto.InternalMessageInfo

func (m *ListIrreparableSegmentsResponse) GetSegments() []*IrreparableSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type CountNodesResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesResponse) Reset()         { *m = CountNodesResponse{} }
func (m *CountNodesResponse) String() string { return proto.CompactTextString(m) }
func (*CountNodesResponse) ProtoMessage()    {}
func (*CountNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{3}
}
func (m *CountNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesResponse.Unmarshal(m, b)
}
func (m *CountNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesResponse.Marshal(b, m, deterministic)
}
func (m *CountNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesResponse.Merge(m, src)
}
func (m *CountNodesResponse) XXX_Size() int {
	return xxx_messageInfo_CountNodesResponse.Size(m)
}
func (m *CountNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesResponse proto.InternalMessageInfo

func (m *CountNodesResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CountNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesRequest) Reset()         { *m = CountNodesRequest{} }
func (m *CountNodesRequest) String() string { return proto.CompactTextString(m) }
func (*CountNodesRequest) ProtoMessage()    {}
func (*CountNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{4}
}
func (m *CountNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesRequest.Unmarshal(m, b)
}
func (m *CountNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesRequest.Marshal(b, m, deterministic)
}
func (m *CountNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesRequest.Merge(m, src)
}
func (m *CountNodesRequest) XXX_Size() int {
	return xxx_messageInfo_CountNodesRequest.Size(m)
}
func (m *CountNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesRequest proto.InternalMessageInfo

type DumpNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpNodesRequest) Reset()         { *m = DumpNodesRequest{} }
func (m *DumpNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DumpNodesRequest) ProtoMessage()    {}
func (*DumpNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{5}
}
func (m *DumpNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpNodesRequest.Unmarshal(m, b)
}
func (m *DumpNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpNodesRequest.Marshal(b, m, deterministic)
}
func (m *DumpNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpNodesRequest.Merge(m, src)
}
func (m *DumpNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DumpNodesRequest.Size(m)
}
func (m *DumpNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpNodesRequest proto.InternalMessageInfo

type DumpNodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpNodesResponse) Reset()         { *m = DumpNodesResponse{} }
func (m *DumpNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DumpNodesResponse) ProtoMessage()    {}
func (*DumpNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{6}
}
func (m *DumpNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpNodesResponse.Unmarshal(m, b)
}
func (m *DumpNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpNodesResponse.Marshal(b, m, deterministic)
}
func (m *DumpNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpNodesResponse.Merge(m, src)
}
func (m *DumpNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DumpNodesResponse.Size(m)
}
func (m *DumpNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpNodesResponse proto.InternalMessageInfo

func (m *DumpNodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type StatsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{7}
}
func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

type StatSummaryResponse struct {
	UsedSpace            int64    `protobuf:"varint,1,opt,name=used_space,json=usedSpace,proto3" json:"used_space,omitempty"`
	AvailableSpace       int64    `protobuf:"varint,2,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	UsedIngress          int64    `protobuf:"varint,3,opt,name=used_ingress,json=usedIngress,proto3" json:"used_ingress,omitempty"`
	UsedEgress           int64    `protobuf:"varint,4,opt,name=used_egress,json=usedEgress,proto3" json:"used_egress,omitempty"`
	UsedBandwidth        int64    `protobuf:"varint,5,opt,name=used_bandwidth,json=usedBandwidth,proto3" json:"used_bandwidth,omitempty"`
	AvailableBandwidth   int64    `protobuf:"varint,6,opt,name=available_bandwidth,json=availableBandwidth,proto3" json:"available_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatSummaryResponse) Reset()         { *m = StatSummaryResponse{} }
func (m *StatSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*StatSummaryResponse) ProtoMessage()    {}
func (*StatSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{8}
}
func (m *StatSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatSummaryResponse.Unmarshal(m, b)
}
func (m *StatSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatSummaryResponse.Marshal(b, m, deterministic)
}
func (m *StatSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatSummaryResponse.Merge(m, src)
}
func (m *StatSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_StatSummaryResponse.Size(m)
}
func (m *StatSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatSummaryResponse proto.InternalMessageInfo

func (m *StatSummaryResponse) GetUsedSpace() int64 {
	if m != nil {
		return m.UsedSpace
	}
	return 0
}

func (m *StatSummaryResponse) GetAvailableSpace() int64 {
	if m != nil {
		return m.AvailableSpace
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedIngress() int64 {
	if m != nil {
		return m.UsedIngress
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedEgress() int64 {
	if m != nil {
		return m.UsedEgress
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedBandwidth() int64 {
	if m != nil {
		return m.UsedBandwidth
	}
	return 0
}

func (m *StatSummaryResponse) GetAvailableBandwidth() int64 {
	if m != nil {
		return m.AvailableBandwidth
	}
	return 0
}

type DashboardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DashboardRequest) Reset()         { *m = DashboardRequest{} }
func (m *DashboardRequest) String() string { return proto.CompactTextString(m) }
func (*DashboardRequest) ProtoMessage()    {}
func (*DashboardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{9}
}
func (m *DashboardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardRequest.Unmarshal(m, b)
}
func (m *DashboardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardRequest.Marshal(b, m, deterministic)
}
func (m *DashboardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardRequest.Merge(m, src)
}
func (m *DashboardRequest) XXX_Size() int {
	return xxx_messageInfo_DashboardRequest.Size(m)
}
func (m *DashboardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardRequest proto.InternalMessageInfo

type DashboardResponse struct {
	NodeId               NodeID               `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	NodeConnections      int64                `protobuf:"varint,2,opt,name=node_connections,json=nodeConnections,proto3" json:"node_connections,omitempty"`
	BootstrapAddress     string               `protobuf:"bytes,3,opt,name=bootstrap_address,json=bootstrapAddress,proto3" json:"bootstrap_address,omitempty"` // Deprecated: Do not use.
	InternalAddress      string               `protobuf:"bytes,4,opt,name=internal_address,json=internalAddress,proto3" json:"internal_address,omitempty"`
	ExternalAddress      string               `protobuf:"bytes,5,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	DashboardAddress     string               `protobuf:"bytes,6,opt,name=dashboard_address,json=dashboardAddress,proto3" json:"dashboard_address,omitempty"`
	Stats                *StatSummaryResponse `protobuf:"bytes,7,opt,name=stats,proto3" json:"stats,omitempty"`
	Uptime               string               `protobuf:"bytes,8,opt,name=uptime,proto3" json:"uptime,omitempty"`
	LastPinged           time.Time            `protobuf:"bytes,9,opt,name=last_pinged,json=lastPinged,proto3,stdtime" json:"last_pinged"`
	LastQueried          time.Time            `protobuf:"bytes,10,opt,name=last_queried,json=lastQueried,proto3,stdtime" json:"last_queried"`
	LastPingFromId       *NodeID              `protobuf:"bytes,11,opt,name=last_ping_from_id,json=lastPingFromId,proto3,customtype=NodeID" json:"last_ping_from_id,omitempty"`
	LastPingFromAddress  string               `protobuf:"bytes,12,opt,name=last_ping_from_address,json=lastPingFromAddress,proto3" json:"last_ping_from_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DashboardResponse) Reset()         { *m = DashboardResponse{} }
func (m *DashboardResponse) String() string { return proto.CompactTextString(m) }
func (*DashboardResponse) ProtoMessage()    {}
func (*DashboardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{10}
}
func (m *DashboardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardResponse.Unmarshal(m, b)
}
func (m *DashboardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardResponse.Marshal(b, m, deterministic)
}
func (m *DashboardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardResponse.Merge(m, src)
}
func (m *DashboardResponse) XXX_Size() int {
	return xxx_messageInfo_DashboardResponse.Size(m)
}
func (m *DashboardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardResponse proto.InternalMessageInfo

func (m *DashboardResponse) GetNodeConnections() int64 {
	if m != nil {
		return m.NodeConnections
	}
	return 0
}

// Deprecated: Do not use.
func (m *DashboardResponse) GetBootstrapAddress() string {
	if m != nil {
		return m.BootstrapAddress
	}
	return ""
}

func (m *DashboardResponse) GetInternalAddress() string {
	if m != nil {
		return m.InternalAddress
	}
	return ""
}

func (m *DashboardResponse) GetExternalAddress() string {
	if m != nil {
		return m.ExternalAddress
	}
	return ""
}

func (m *DashboardResponse) GetDashboardAddress() string {
	if m != nil {
		return m.DashboardAddress
	}
	return ""
}

func (m *DashboardResponse) GetStats() *StatSummaryResponse {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *DashboardResponse) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *DashboardResponse) GetLastPinged() time.Time {
	if m != nil {
		return m.LastPinged
	}
	return time.Time{}
}

func (m *DashboardResponse) GetLastQueried() time.Time {
	if m != nil {
		return m.LastQueried
	}
	return time.Time{}
}

func (m *DashboardResponse) GetLastPingFromAddress() string {
	if m != nil {
		return m.LastPingFromAddress
	}
	return ""
}

type SegmentHealthRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	EncryptedPath        []byte   `protobuf:"bytes,2,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	SegmentIndex         int64    `protobuf:"varint,3,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	ProjectId            []byte   `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentHealthRequest) Reset()         { *m = SegmentHealthRequest{} }
func (m *SegmentHealthRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentHealthRequest) ProtoMessage()    {}
func (*SegmentHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{11}
}
func (m *SegmentHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealthRequest.Unmarshal(m, b)
}
func (m *SegmentHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealthRequest.Marshal(b, m, deterministic)
}
func (m *SegmentHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealthRequest.Merge(m, src)
}
func (m *SegmentHealthRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentHealthRequest.Size(m)
}
func (m *SegmentHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealthRequest proto.InternalMessageInfo

func (m *SegmentHealthRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentHealthRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *SegmentHealthRequest) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

func (m *SegmentHealthRequest) GetProjectId() []byte {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

type SegmentHealth struct {
	HealthyIds           []NodeID `protobuf:"bytes,1,rep,name=healthy_ids,json=healthyIds,proto3,customtype=NodeID" json:"healthy_ids,omitempty"`
	UnhealthyIds         []NodeID `protobuf:"bytes,2,rep,name=unhealthy_ids,json=unhealthyIds,proto3,customtype=NodeID" json:"unhealthy_ids,omitempty"`
	OfflineIds           []NodeID `protobuf:"bytes,3,rep,name=offline_ids,json=offlineIds,proto3,customtype=NodeID" json:"offline_ids,omitempty"`
	Segment              []byte   `protobuf:"bytes,4,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentHealth) Reset()         { *m = SegmentHealth{} }
func (m *SegmentHealth) String() string { return proto.CompactTextString(m) }
func (*SegmentHealth) ProtoMessage()    {}
func (*SegmentHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{12}
}
func (m *SegmentHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealth.Unmarshal(m, b)
}
func (m *SegmentHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealth.Marshal(b, m, deterministic)
}
func (m *SegmentHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealth.Merge(m, src)
}
func (m *SegmentHealth) XXX_Size() int {
	return xxx_messageInfo_SegmentHealth.Size(m)
}
func (m *SegmentHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealth.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealth proto.InternalMessageInfo

func (m *SegmentHealth) GetSegment() []byte {
	if m != nil {
		return m.Segment
	}
	return nil
}

type SegmentHealthResponse struct {
	Health               *SegmentHealth    `protobuf:"bytes,1,opt,name=health,proto3" json:"health,omitempty"`
	Redundancy           *RedundancyScheme `protobuf:"bytes,2,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentHealthResponse) Reset()         { *m = SegmentHealthResponse{} }
func (m *SegmentHealthResponse) String() string { return proto.CompactTextString(m) }
func (*SegmentHealthResponse) ProtoMessage()    {}
func (*SegmentHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{13}
}
func (m *SegmentHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealthResponse.Unmarshal(m, b)
}
func (m *SegmentHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealthResponse.Marshal(b, m, deterministic)
}
func (m *SegmentHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealthResponse.Merge(m, src)
}
func (m *SegmentHealthResponse) XXX_Size() int {
	return xxx_messageInfo_SegmentHealthResponse.Size(m)
}
func (m *SegmentHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealthResponse proto.InternalMessageInfo

func (m *SegmentHealthResponse) GetHealth() *SegmentHealth {
	if m != nil {
		return m.Health
	}
	return nil
}

func (m *SegmentHealthResponse) GetRedundancy() *RedundancyScheme {
	if m != nil {
		return m.Redundancy
	}
	return nil
}

type ObjectHealthRequest struct {
	EncryptedPath        []byte   `protobuf:"bytes,1,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	Bucket               []byte   `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ProjectId            []byte   `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	StartAfterSegment    int64    `protobuf:"varint,4,opt,name=start_after_segment,json=startAfterSegment,proto3" json:"start_after_segment,omitempty"`
	EndBeforeSegment     int64    `protobuf:"varint,5,opt,name=end_before_segment,json=endBeforeSegment,proto3" json:"end_before_segment,omitempty"`
	Limit                int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectHealthRequest) Reset()         { *m = ObjectHealthRequest{} }
func (m *ObjectHealthRequest) String() string { return proto.CompactTextString(m) }
func (*ObjectHealthRequest) ProtoMessage()    {}
func (*ObjectHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{14}
}
func (m *ObjectHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectHealthRequest.Unmarshal(m, b)
}
func (m *ObjectHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectHealthRequest.Marshal(b, m, deterministic)
}
func (m *ObjectHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectHealthRequest.Merge(m, src)
}
func (m *ObjectHealthRequest) XXX_Size() int {
	return xxx_messageInfo_ObjectHealthRequest.Size(m)
}
func (m *ObjectHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectHealthRequest proto.InternalMessageInfo

func (m *ObjectHealthRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *ObjectHealthRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ObjectHealthRequest) GetProjectId() []byte {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *ObjectHealthRequest) GetStartAfterSegment() int64 {
	if m != nil {
		return m.StartAfterSegment
	}
	return 0
}

func (m *ObjectHealthRequest) GetEndBeforeSegment() int64 {
	if m != nil {
		return m.EndBeforeSegment
	}
	return 0
}

func (m *ObjectHealthRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ObjectHealthResponse struct {
	Segments             []*SegmentHealth  `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	Redundancy           *RedundancyScheme `protobuf:"bytes,2,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ObjectHealthResponse) Reset()         { *m = ObjectHealthResponse{} }
func (m *ObjectHealthResponse) String() string { return proto.CompactTextString(m) }
func (*ObjectHealthResponse) ProtoMessage()    {}
func (*ObjectHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{15}
}
func (m *ObjectHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectHealthResponse.Unmarshal(m, b)
}
func (m *ObjectHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectHealthResponse.Marshal(b, m, deterministic)
}
func (m *ObjectHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectHealthResponse.Merge(m, src)
}
func (m *ObjectHealthResponse) XXX_Size() int {
	return xxx_messageInfo_ObjectHealthResponse.Size(m)
}
func (m *ObjectHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectHealthResponse proto.InternalMessageInfo

func (m *ObjectHealthResponse) GetSegments() []*SegmentHealth {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ObjectHealthResponse) GetRedundancy() *RedundancyScheme {
	if m != nil {
		return m.Redundancy
	}
	return nil
}

func init() {
	proto.RegisterType((*ListIrreparableSegmentsRequest)(nil), "inspector.ListIrreparableSegmentsRequest")
	proto.RegisterType((*IrreparableSegment)(nil), "inspector.IrreparableSegment")
	proto.RegisterType((*ListIrreparableSegmentsResponse)(nil), "inspector.ListIrreparableSegmentsResponse")
	proto.RegisterType((*CountNodesResponse)(nil), "inspector.CountNodesResponse")
	proto.RegisterType((*CountNodesRequest)(nil), "inspector.CountNodesRequest")
	proto.RegisterType((*DumpNodesRequest)(nil), "inspector.DumpNodesRequest")
	proto.RegisterType((*DumpNodesResponse)(nil), "inspector.DumpNodesResponse")
	proto.RegisterType((*StatsRequest)(nil), "inspector.StatsRequest")
	proto.RegisterType((*StatSummaryResponse)(nil), "inspector.StatSummaryResponse")
	proto.RegisterType((*DashboardRequest)(nil), "inspector.DashboardRequest")
	proto.RegisterType((*DashboardResponse)(nil), "inspector.DashboardResponse")
	proto.RegisterType((*SegmentHealthRequest)(nil), "inspector.SegmentHealthRequest")
	proto.RegisterType((*SegmentHealth)(nil), "inspector.SegmentHealth")
	proto.RegisterType((*SegmentHealthResponse)(nil), "inspector.SegmentHealthResponse")
	proto.RegisterType((*ObjectHealthRequest)(nil), "inspector.ObjectHealthRequest")
	proto.RegisterType((*ObjectHealthResponse)(nil), "inspector.ObjectHealthResponse")
}

func init() { proto.RegisterFile("inspector.proto", fileDescriptor_a07d9034b2dd9d26) }

var fileDescriptor_a07d9034b2dd9d26 = []byte{
	// 1247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcd, 0x8e, 0x1b, 0x45,
	0x10, 0xce, 0xac, 0xd7, 0x4e, 0x5c, 0xf6, 0xfe, 0xb8, 0x6d, 0x92, 0x91, 0xf3, 0xe3, 0x65, 0x10,
	0xca, 0x26, 0x41, 0xde, 0x68, 0x93, 0x1c, 0x22, 0x4e, 0x71, 0x7e, 0x88, 0x25, 0x44, 0x36, 0xe3,
	0x9c, 0x10, 0xd2, 0xa8, 0xed, 0x6e, 0xdb, 0x93, 0x78, 0xba, 0x27, 0x3d, 0xed, 0x90, 0x7d, 0x01,
	0x04, 0x37, 0xae, 0x9c, 0x11, 0x6f, 0xc0, 0x89, 0x27, 0xe0, 0x19, 0x38, 0x84, 0x13, 0xf0, 0x0c,
	0xdc, 0x50, 0xff, 0x4c, 0x7b, 0x6c, 0xaf, 0xf9, 0x11, 0xb7, 0x99, 0xaf, 0xbe, 0xaa, 0xa9, 0xfe,
	0xaa, 0xba, 0x6a, 0x60, 0x2f, 0x66, 0x59, 0x4a, 0x47, 0x92, 0x8b, 0x6e, 0x2a, 0xb8, 0xe4, 0xa8,
	0xea, 0x80, 0x36, 0x4c, 0xf8, 0x84, 0x1b, 0xb8, 0x0d, 0x8c, 0x13, 0x6a, 0x9f, 0xf7, 0x52, 0x1e,
	0x33, 0x49, 0x05, 0x19, 0x5a, 0xa0, 0x33, 0xe1, 0x7c, 0x32, 0xa3, 0x47, 0xfa, 0x6d, 0x38, 0x1f,
	0x1f, 0xc9, 0x38, 0xa1, 0x99, 0xc4, 0x49, 0x6a, 0x08, 0xc1, 0x2b, 0xb8, 0xf6, 0x69, 0x9c, 0xc9,
	0xbe, 0x10, 0x34, 0xc5, 0x02, 0x0f, 0x67, 0x74, 0x40, 0x27, 0x09, 0x65, 0x32, 0x0b, 0xe9, 0xeb,
	0x39, 0xcd, 0x24, 0x6a, 0x41, 0x79, 0x16, 0x27, 0xb1, 0xf4, 0xbd, 0x03, 0xef, 0xb0, 0x1c, 0x9a,
	0x17, 0x74, 0x07, 0x2e, 0xce, 0x70, 0x26, 0xa3, 0x8c, 0x52, 0x16, 0x65, 0xc6, 0x25, 0x4a, 0xb1,
	0x9c, 0xfa, 0x5b, 0x07, 0xde, 0x61, 0x3d, 0x6c, 0x2a, 0xeb, 0x80, 0x52, 0x66, 0xc3, 0x9d, 0x60,
	0x39, 0x0d, 0x7e, 0xf7, 0x00, 0xad, 0x7f, 0x09, 0x21, 0xd8, 0xd6, 0x9e, 0x9e, 0xf6, 0xd4, 0xcf,
	0xe8, 0x3e, 0xec, 0xe6, 0x51, 0x09, 0x95, 0x38, 0x9e, 0xe9, 0xb8, 0xb5, 0x63, 0xd4, 0x5d, 0x1c,
	0xf1, 0xc4, 0x3c, 0x85, 0x3b, 0x96, 0xf9, 0x48, 0x13, 0x51, 0x07, 0x6a, 0x33, 0x9e, 0xc9, 0x28,
	0x8d, 0xe9, 0x88, 0x66, 0x7e, 0x49, 0xa7, 0x0d, 0x0a, 0x3a, 0xd1, 0x08, 0xea, 0x82, 0xce, 0x2e,
	0x52, 0x89, 0xc4, 0x22, 0xc2, 0x52, 0xd2, 0x24, 0x95, 0xfe, 0xf6, 0x81, 0x77, 0x58, 0x0a, 0x1b,
	0xca, 0x14, 0x6a, 0xcb, 0x03, 0x63, 0x40, 0xb7, 0xa1, 0xb5, 0x4c, 0x8d, 0x46, 0x7c, 0xce, 0xa4,
	0x5f, 0xd6, 0x0e, 0x48, 0x14, 0xc9, 0x0f, 0x95, 0x25, 0xf8, 0x02, 0x3a, 0x1b, 0x55, 0xcd, 0x52,
	0xce, 0x32, 0x8a, 0xee, 0xc3, 0x05, 0x9b, 0x76, 0xe6, 0x7b, 0x07, 0xa5, 0xc3, 0xda, 0xf1, 0xd5,
	0xee, 0xa2, 0xe2, 0xeb, 0x9e, 0xa1, 0xa3, 0x07, 0x37, 0x01, 0xe9, 0xcf, 0x7c, 0xc6, 0x09, 0x5d,
	0x04, 0x6c, 0x41, 0xd9, 0xa4, 0xe5, 0xe9, 0xb4, 0xcc, 0x4b, 0xd0, 0x84, 0x46, 0x91, 0xab, 0x4b,
	0x1a, 0x20, 0xd8, 0x7f, 0x34, 0x4f, 0xd2, 0x25, 0xec, 0x1e, 0x34, 0x0a, 0x98, 0x8d, 0x79, 0x00,
	0x65, 0xd5, 0x5d, 0x79, 0x86, 0xd0, 0xd5, 0xbd, 0xa6, 0x38, 0xa1, 0x31, 0x04, 0xbb, 0x50, 0x1f,
	0x48, 0xec, 0xba, 0x25, 0xf8, 0xd3, 0x83, 0xa6, 0x02, 0x06, 0xf3, 0x24, 0xc1, 0xe2, 0xd4, 0x45,
	0xba, 0x0a, 0x30, 0xcf, 0x28, 0x89, 0xb2, 0x14, 0x8f, 0xa8, 0x4d, 0xb1, 0xaa, 0x90, 0x81, 0x02,
	0xd0, 0x75, 0xd8, 0xc3, 0x6f, 0x70, 0x3c, 0x53, 0x07, 0xb6, 0x9c, 0x2d, 0xcd, 0xd9, 0x75, 0xb0,
	0x21, 0xbe, 0x0f, 0x75, 0x1d, 0x27, 0x66, 0x13, 0x41, 0x33, 0x53, 0xdd, 0x52, 0x58, 0x53, 0x58,
	0xdf, 0x40, 0xaa, 0xfe, 0x9a, 0x42, 0x0d, 0xc3, 0x94, 0x55, 0x7f, 0xfd, 0xb1, 0x21, 0x7c, 0x08,
	0xbb, 0x9a, 0x30, 0xc4, 0x8c, 0x7c, 0x19, 0x13, 0x39, 0xb5, 0x95, 0xdc, 0x51, 0x68, 0x2f, 0x07,
	0xd1, 0x11, 0x34, 0x17, 0x39, 0x2d, 0xb8, 0x15, 0x53, 0x75, 0x67, 0x72, 0x0e, 0x5a, 0x56, 0x9c,
	0x4d, 0x87, 0x1c, 0x0b, 0x92, 0xeb, 0xf1, 0xdb, 0x36, 0x34, 0x0a, 0xa0, 0x55, 0xe3, 0x3a, 0x9c,
	0x57, 0xf2, 0x45, 0x31, 0x31, 0x4d, 0xdf, 0xdb, 0xfd, 0xf9, 0x5d, 0xe7, 0xdc, 0x2f, 0xef, 0x3a,
	0x15, 0xa5, 0x6d, 0xff, 0x51, 0x58, 0x51, 0xe6, 0x3e, 0x41, 0x37, 0x60, 0x5f, 0x13, 0x47, 0x9c,
	0x31, 0x3a, 0x92, 0x31, 0x67, 0x99, 0x15, 0x66, 0x4f, 0xe1, 0x0f, 0x17, 0x30, 0x3a, 0x82, 0xc6,
	0x90, 0x73, 0x99, 0x49, 0x81, 0xd3, 0x08, 0x13, 0xe2, 0xe4, 0xa9, 0xf6, 0xb6, 0x7c, 0x2f, 0xdc,
	0x77, 0xc6, 0x07, 0xc6, 0xa6, 0x62, 0xeb, 0xfb, 0xc3, 0xf0, 0xcc, 0xf1, 0x95, 0x58, 0xd5, 0x70,
	0x2f, 0xc7, 0x0b, 0x54, 0xfa, 0x76, 0x85, 0x5a, 0x36, 0xd4, 0x1c, 0xcf, 0xa9, 0xb7, 0xa0, 0x41,
	0xf2, 0xf3, 0x3a, 0x6e, 0x45, 0x73, 0xf7, 0x9d, 0x21, 0x27, 0xdf, 0x85, 0x72, 0xa6, 0xba, 0xc7,
	0x3f, 0xaf, 0x2f, 0xf7, 0xb5, 0xc2, 0x0d, 0x38, 0xa3, 0x89, 0x42, 0x43, 0x46, 0x17, 0xa1, 0x32,
	0x4f, 0xd5, 0x20, 0xf3, 0x2f, 0xe8, 0xb8, 0xf6, 0x0d, 0x3d, 0x86, 0x9a, 0xbe, 0xd7, 0x69, 0xcc,
	0x26, 0x94, 0xf8, 0x55, 0x1d, 0xb3, 0xdd, 0x35, 0x23, 0xb0, 0x9b, 0x8f, 0xc0, 0xee, 0x8b, 0x7c,
	0x04, 0xf6, 0x2e, 0x28, 0xd5, 0xbf, 0xfd, 0xb5, 0xe3, 0x85, 0xa0, 0x1c, 0x4f, 0xb4, 0x1f, 0xfa,
	0x04, 0xea, 0x3a, 0xcc, 0xeb, 0x39, 0x15, 0x31, 0x25, 0x3e, 0xfc, 0x87, 0x38, 0x3a, 0x81, 0xe7,
	0xc6, 0x11, 0xdd, 0x83, 0x86, 0xcb, 0x27, 0x1a, 0x0b, 0x9e, 0xa8, 0x7a, 0xd7, 0x74, 0xbd, 0xa1,
	0x50, 0xeb, 0xdd, 0xfc, 0xdb, 0x4f, 0x04, 0x4f, 0xfa, 0xc4, 0x8d, 0xd6, 0x85, 0x5b, 0x2e, 0x63,
	0x5d, 0x1f, 0xb7, 0x59, 0xe4, 0x5b, 0x25, 0x83, 0xef, 0x3c, 0x68, 0xd9, 0x49, 0xf1, 0x94, 0xe2,
	0x99, 0x9c, 0xe6, 0xe3, 0xfb, 0x22, 0x54, 0x86, 0xf3, 0xd1, 0x2b, 0x2a, 0xed, 0x78, 0xb5, 0x6f,
	0xea, 0x12, 0x50, 0x36, 0x12, 0xa7, 0xa9, 0xa4, 0xa4, 0x38, 0xb8, 0x77, 0x1c, 0xaa, 0x46, 0x36,
	0xfa, 0x00, 0xf2, 0xe9, 0x1a, 0xc5, 0x8c, 0xd0, 0xb7, 0xf6, 0xc2, 0xd5, 0x2d, 0xd8, 0x57, 0x98,
	0xba, 0xdc, 0xa9, 0xe0, 0x2f, 0xe9, 0x48, 0xaa, 0x13, 0x6e, 0xeb, 0x38, 0x55, 0x8b, 0xf4, 0x49,
	0xf0, 0xa3, 0x07, 0x3b, 0x4b, 0xb9, 0xa1, 0x5b, 0x50, 0x9b, 0xea, 0xa7, 0xd3, 0x28, 0x26, 0x66,
	0xba, 0x2c, 0x6b, 0x02, 0xd6, 0xdc, 0x27, 0xaa, 0xb1, 0x77, 0xe6, 0xac, 0x48, 0xdf, 0x5a, 0xa3,
	0xd7, 0x1d, 0x41, 0x39, 0xdc, 0x82, 0x1a, 0x1f, 0x8f, 0x67, 0x31, 0xa3, 0x9a, 0x5e, 0x5a, 0x8f,
	0x6e, 0xcd, 0x8a, 0xec, 0xc3, 0x79, 0x7b, 0x16, 0x9b, 0x78, 0xfe, 0x1a, 0x7c, 0xe5, 0xc1, 0x7b,
	0x2b, 0x92, 0xda, 0xeb, 0x7b, 0x1b, 0x2a, 0xe6, 0x73, 0x5a, 0xd3, 0xda, 0xb1, 0x5f, 0xec, 0xdb,
	0x25, 0x0f, 0xcb, 0x43, 0x1f, 0x03, 0x08, 0x4a, 0xe6, 0x8c, 0x60, 0x36, 0x3a, 0xb5, 0xab, 0xec,
	0x72, 0x61, 0x95, 0x85, 0xce, 0x38, 0x18, 0x4d, 0x69, 0x42, 0xc3, 0x02, 0x3d, 0xf8, 0xc3, 0x83,
	0xe6, 0xb3, 0xa1, 0x12, 0x73, 0xb9, 0xb4, 0xeb, 0x25, 0xf4, 0xce, 0x2a, 0xe1, 0xa2, 0x03, 0xb6,
	0x96, 0x3a, 0x60, 0xb9, 0x6a, 0xa5, 0x95, 0xaa, 0xa9, 0x2d, 0x99, 0x49, 0x2c, 0x64, 0x84, 0xc7,
	0x92, 0x8a, 0xa8, 0x28, 0x52, 0x29, 0x6c, 0x68, 0xd3, 0x03, 0x65, 0xc9, 0xb7, 0xf8, 0x47, 0x80,
	0x28, 0x23, 0xd1, 0x90, 0x8e, 0xb9, 0xa0, 0x8e, 0x6e, 0x26, 0xeb, 0x3e, 0x65, 0xa4, 0xa7, 0x0d,
	0x39, 0xdb, 0xfd, 0x55, 0x54, 0x0a, 0x7f, 0x15, 0xc1, 0x37, 0x1e, 0xb4, 0x96, 0x4f, 0x6a, 0x15,
	0xbf, 0xbb, 0xb6, 0x2d, 0x37, 0x6b, 0xee, 0x98, 0xff, 0x4b, 0xf5, 0xe3, 0x1f, 0x3c, 0xd8, 0x7f,
	0xf6, 0x86, 0x8a, 0x19, 0x3e, 0xed, 0xe7, 0x5f, 0x42, 0x7d, 0x80, 0xc5, 0x3a, 0x45, 0x57, 0x0a,
	0x39, 0xac, 0x6d, 0xd9, 0xf6, 0xd5, 0x0d, 0x56, 0x7b, 0xa4, 0x27, 0x50, 0x75, 0x0b, 0x17, 0x5d,
	0x2e, 0x70, 0x57, 0x57, 0x73, 0xfb, 0xca, 0xd9, 0x46, 0x13, 0xe7, 0xf8, 0x7b, 0x0f, 0x9a, 0xfa,
	0xc7, 0x66, 0x20, 0xb9, 0xa0, 0x8b, 0x54, 0x7b, 0x50, 0xd6, 0x9b, 0x19, 0x5d, 0x5a, 0x99, 0xaa,
	0x2e, 0xee, 0x3f, 0x8c, 0xdb, 0xe0, 0x1c, 0x7a, 0x0a, 0x55, 0xb7, 0xbc, 0x96, 0x73, 0x5c, 0xd9,
	0x73, 0xcb, 0x39, 0xae, 0xee, 0xbb, 0xe0, 0xdc, 0xf1, 0xd7, 0x1e, 0xb4, 0x0a, 0x3f, 0x35, 0x8b,
	0x34, 0x53, 0xb8, 0xb4, 0xe1, 0x57, 0x09, 0xdd, 0x28, 0xc4, 0xfc, 0xfb, 0x9f, 0xd4, 0xf6, 0xcd,
	0x7f, 0x43, 0xb5, 0x82, 0xfd, 0xe4, 0xc1, 0x9e, 0x69, 0x95, 0x45, 0x16, 0xcf, 0xa1, 0x5e, 0xec,
	0x3b, 0x54, 0x94, 0xe6, 0x8c, 0xab, 0xd7, 0xee, 0x6c, 0xb4, 0x3b, 0xed, 0x5e, 0xac, 0x0e, 0xbd,
	0xce, 0xc6, 0x8e, 0xb5, 0x41, 0x0f, 0x36, 0x13, 0xf2, 0xa8, 0xbd, 0xd6, 0xe7, 0x28, 0x93, 0x5c,
	0xbc, 0xec, 0xc6, 0xfc, 0x68, 0xc4, 0x93, 0x84, 0xb3, 0xa3, 0x74, 0x38, 0xac, 0xe8, 0xa5, 0x74,
	0xe7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xd5, 0x0c, 0xd9, 0x34, 0x0c, 0x00, 0x00,
}

// --- DRPC BEGIN ---

type DRPCOverlayInspectorClient interface {
	DRPCConn() drpc.Conn

	// CountNodes returns the number of nodes in the cache
	CountNodes(ctx context.Context, in *CountNodesRequest) (*CountNodesResponse, error)
	// DumpNodes returns all the nodes in the cache
	DumpNodes(ctx context.Context, in *DumpNodesRequest) (*DumpNodesResponse, error)
}

type drpcOverlayInspectorClient struct {
	cc drpc.Conn
}

func NewDRPCOverlayInspectorClient(cc drpc.Conn) DRPCOverlayInspectorClient {
	return &drpcOverlayInspectorClient{cc}
}

func (c *drpcOverlayInspectorClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcOverlayInspectorClient) CountNodes(ctx context.Context, in *CountNodesRequest) (*CountNodesResponse, error) {
	out := new(CountNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/CountNodes", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcOverlayInspectorClient) DumpNodes(ctx context.Context, in *DumpNodesRequest) (*DumpNodesResponse, error) {
	out := new(DumpNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/DumpNodes", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCOverlayInspectorServer interface {
	// CountNodes returns the number of nodes in the cache
	CountNodes(context.Context, *CountNodesRequest) (*CountNodesResponse, error)
	// DumpNodes returns all the nodes in the cache
	DumpNodes(context.Context, *DumpNodesRequest) (*DumpNodesResponse, error)
}

type DRPCOverlayInspectorDescription struct{}

func (DRPCOverlayInspectorDescription) NumMethods() int { return 2 }

func (DRPCOverlayInspectorDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/inspector.OverlayInspector/CountNodes",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCOverlayInspectorServer).
					CountNodes(
						ctx,
						in1.(*CountNodesRequest),
					)
			}, DRPCOverlayInspectorServer.CountNodes, true
	case 1:
		return "/inspector.OverlayInspector/DumpNodes",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCOverlayInspectorServer).
					DumpNodes(
						ctx,
						in1.(*DumpNodesRequest),
					)
			}, DRPCOverlayInspectorServer.DumpNodes, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterOverlayInspector(mux drpc.Mux, impl DRPCOverlayInspectorServer) error {
	return mux.Register(impl, DRPCOverlayInspectorDescription{})
}

type DRPCOverlayInspector_CountNodesStream interface {
	drpc.Stream
	SendAndClose(*CountNodesResponse) error
}

type drpcOverlayInspectorCountNodesStream struct {
	drpc.Stream
}

func (x *drpcOverlayInspectorCountNodesStream) SendAndClose(m *CountNodesResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCOverlayInspector_DumpNodesStream interface {
	drpc.Stream
	SendAndClose(*DumpNodesResponse) error
}

type drpcOverlayInspectorDumpNodesStream struct {
	drpc.Stream
}

func (x *drpcOverlayInspectorDumpNodesStream) SendAndClose(m *DumpNodesResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCPieceStoreInspectorClient interface {
	DRPCConn() drpc.Conn

	// Stats return space and bandwidth stats for a storagenode
	Stats(ctx context.Context, in *StatsRequest) (*StatSummaryResponse, error)
	// Dashboard returns stats for a specific storagenode
	Dashboard(ctx context.Context, in *DashboardRequest) (*DashboardResponse, error)
}

type drpcPieceStoreInspectorClient struct {
	cc drpc.Conn
}

func NewDRPCPieceStoreInspectorClient(cc drpc.Conn) DRPCPieceStoreInspectorClient {
	return &drpcPieceStoreInspectorClient{cc}
}

func (c *drpcPieceStoreInspectorClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcPieceStoreInspectorClient) Stats(ctx context.Context, in *StatsRequest) (*StatSummaryResponse, error) {
	out := new(StatSummaryResponse)
	err := c.cc.Invoke(ctx, "/inspector.PieceStoreInspector/Stats", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcPieceStoreInspectorClient) Dashboard(ctx context.Context, in *DashboardRequest) (*DashboardResponse, error) {
	out := new(DashboardResponse)
	err := c.cc.Invoke(ctx, "/inspector.PieceStoreInspector/Dashboard", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCPieceStoreInspectorServer interface {
	// Stats return space and bandwidth stats for a storagenode
	Stats(context.Context, *StatsRequest) (*StatSummaryResponse, error)
	// Dashboard returns stats for a specific storagenode
	Dashboard(context.Context, *DashboardRequest) (*DashboardResponse, error)
}

type DRPCPieceStoreInspectorDescription struct{}

func (DRPCPieceStoreInspectorDescription) NumMethods() int { return 2 }

func (DRPCPieceStoreInspectorDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/inspector.PieceStoreInspector/Stats",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCPieceStoreInspectorServer).
					Stats(
						ctx,
						in1.(*StatsRequest),
					)
			}, DRPCPieceStoreInspectorServer.Stats, true
	case 1:
		return "/inspector.PieceStoreInspector/Dashboard",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCPieceStoreInspectorServer).
					Dashboard(
						ctx,
						in1.(*DashboardRequest),
					)
			}, DRPCPieceStoreInspectorServer.Dashboard, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterPieceStoreInspector(mux drpc.Mux, impl DRPCPieceStoreInspectorServer) error {
	return mux.Register(impl, DRPCPieceStoreInspectorDescription{})
}

type DRPCPieceStoreInspector_StatsStream interface {
	drpc.Stream
	SendAndClose(*StatSummaryResponse) error
}

type drpcPieceStoreInspectorStatsStream struct {
	drpc.Stream
}

func (x *drpcPieceStoreInspectorStatsStream) SendAndClose(m *StatSummaryResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCPieceStoreInspector_DashboardStream interface {
	drpc.Stream
	SendAndClose(*DashboardResponse) error
}

type drpcPieceStoreInspectorDashboardStream struct {
	drpc.Stream
}

func (x *drpcPieceStoreInspectorDashboardStream) SendAndClose(m *DashboardResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCIrreparableInspectorClient interface {
	DRPCConn() drpc.Conn

	// ListIrreparableSegments returns damaged segments
	ListIrreparableSegments(ctx context.Context, in *ListIrreparableSegmentsRequest) (*ListIrreparableSegmentsResponse, error)
}

type drpcIrreparableInspectorClient struct {
	cc drpc.Conn
}

func NewDRPCIrreparableInspectorClient(cc drpc.Conn) DRPCIrreparableInspectorClient {
	return &drpcIrreparableInspectorClient{cc}
}

func (c *drpcIrreparableInspectorClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcIrreparableInspectorClient) ListIrreparableSegments(ctx context.Context, in *ListIrreparableSegmentsRequest) (*ListIrreparableSegmentsResponse, error) {
	out := new(ListIrreparableSegmentsResponse)
	err := c.cc.Invoke(ctx, "/inspector.IrreparableInspector/ListIrreparableSegments", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCIrreparableInspectorServer interface {
	// ListIrreparableSegments returns damaged segments
	ListIrreparableSegments(context.Context, *ListIrreparableSegmentsRequest) (*ListIrreparableSegmentsResponse, error)
}

type DRPCIrreparableInspectorDescription struct{}

func (DRPCIrreparableInspectorDescription) NumMethods() int { return 1 }

func (DRPCIrreparableInspectorDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/inspector.IrreparableInspector/ListIrreparableSegments",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCIrreparableInspectorServer).
					ListIrreparableSegments(
						ctx,
						in1.(*ListIrreparableSegmentsRequest),
					)
			}, DRPCIrreparableInspectorServer.ListIrreparableSegments, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterIrreparableInspector(mux drpc.Mux, impl DRPCIrreparableInspectorServer) error {
	return mux.Register(impl, DRPCIrreparableInspectorDescription{})
}

type DRPCIrreparableInspector_ListIrreparableSegmentsStream interface {
	drpc.Stream
	SendAndClose(*ListIrreparableSegmentsResponse) error
}

type drpcIrreparableInspectorListIrreparableSegmentsStream struct {
	drpc.Stream
}

func (x *drpcIrreparableInspectorListIrreparableSegmentsStream) SendAndClose(m *ListIrreparableSegmentsResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCHealthInspectorClient interface {
	DRPCConn() drpc.Conn

	// ObjectHealth will return stats about the health of an object
	ObjectHealth(ctx context.Context, in *ObjectHealthRequest) (*ObjectHealthResponse, error)
	// SegmentHealth will return stats about the health of a segment
	SegmentHealth(ctx context.Context, in *SegmentHealthRequest) (*SegmentHealthResponse, error)
}

type drpcHealthInspectorClient struct {
	cc drpc.Conn
}

func NewDRPCHealthInspectorClient(cc drpc.Conn) DRPCHealthInspectorClient {
	return &drpcHealthInspectorClient{cc}
}

func (c *drpcHealthInspectorClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcHealthInspectorClient) ObjectHealth(ctx context.Context, in *ObjectHealthRequest) (*ObjectHealthResponse, error) {
	out := new(ObjectHealthResponse)
	err := c.cc.Invoke(ctx, "/inspector.HealthInspector/ObjectHealth", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcHealthInspectorClient) SegmentHealth(ctx context.Context, in *SegmentHealthRequest) (*SegmentHealthResponse, error) {
	out := new(SegmentHealthResponse)
	err := c.cc.Invoke(ctx, "/inspector.HealthInspector/SegmentHealth", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCHealthInspectorServer interface {
	// ObjectHealth will return stats about the health of an object
	ObjectHealth(context.Context, *ObjectHealthRequest) (*ObjectHealthResponse, error)
	// SegmentHealth will return stats about the health of a segment
	SegmentHealth(context.Context, *SegmentHealthRequest) (*SegmentHealthResponse, error)
}

type DRPCHealthInspectorDescription struct{}

func (DRPCHealthInspectorDescription) NumMethods() int { return 2 }

func (DRPCHealthInspectorDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/inspector.HealthInspector/ObjectHealth",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCHealthInspectorServer).
					ObjectHealth(
						ctx,
						in1.(*ObjectHealthRequest),
					)
			}, DRPCHealthInspectorServer.ObjectHealth, true
	case 1:
		return "/inspector.HealthInspector/SegmentHealth",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCHealthInspectorServer).
					SegmentHealth(
						ctx,
						in1.(*SegmentHealthRequest),
					)
			}, DRPCHealthInspectorServer.SegmentHealth, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterHealthInspector(mux drpc.Mux, impl DRPCHealthInspectorServer) error {
	return mux.Register(impl, DRPCHealthInspectorDescription{})
}

type DRPCHealthInspector_ObjectHealthStream interface {
	drpc.Stream
	SendAndClose(*ObjectHealthResponse) error
}

type drpcHealthInspectorObjectHealthStream struct {
	drpc.Stream
}

func (x *drpcHealthInspectorObjectHealthStream) SendAndClose(m *ObjectHealthResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCHealthInspector_SegmentHealthStream interface {
	drpc.Stream
	SendAndClose(*SegmentHealthResponse) error
}

type drpcHealthInspectorSegmentHealthStream struct {
	drpc.Stream
}

func (x *drpcHealthInspectorSegmentHealthStream) SendAndClose(m *SegmentHealthResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

// --- DRPC END ---
